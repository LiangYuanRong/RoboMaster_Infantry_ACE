#include "main.h"
#include "BMI160.h"



/*
*名称：外接陀螺仪BMI160串口初始化
*功能：初始化串口2
*输入：无
*输出：无
*/
u8 Usart2_Rx[USART2_RX_LEN]={0};
u8 MSDataBuffer_2[USART2_RX_LEN];

void BMI160_USART2_Configuration(void)
{
/* -------------- Enable Module Clock Source ----------------------------*/
	RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOA | RCC_AHB1Periph_DMA1, ENABLE);
	RCC_APB1PeriphClockCmd(RCC_APB1Periph_USART2,ENABLE);//使能USART3时钟
	GPIO_PinAFConfig(GPIOA,GPIO_PinSource2,GPIO_AF_USART2); //GPIOD8复用为USART3
	GPIO_PinAFConfig(GPIOA,GPIO_PinSource3,GPIO_AF_USART2); //GPIOD9复用为USART3
/* -------------- Configure GPIO ---------------------------------------*/
	{
		GPIO_InitTypeDef GPIO_InitStruct;
		NVIC_InitTypeDef NVIC_InitStructure;
		USART_InitTypeDef USART2_InitStruct;
		
		GPIO_InitStruct.GPIO_Pin = GPIO_Pin_2 | GPIO_Pin_3;
		GPIO_InitStruct.GPIO_Mode = GPIO_Mode_AF;
		GPIO_InitStruct.GPIO_OType = GPIO_OType_PP;
		GPIO_InitStruct.GPIO_Speed = GPIO_Speed_50MHz;
		GPIO_InitStruct.GPIO_PuPd = GPIO_PuPd_UP;
		GPIO_Init(GPIOA, &GPIO_InitStruct);
	
		USART_DeInit(USART2);
		USART2_InitStruct.USART_BaudRate = 115200;
		USART2_InitStruct.USART_WordLength = USART_WordLength_8b;
		USART2_InitStruct.USART_StopBits = USART_StopBits_1;
		USART2_InitStruct.USART_Parity = USART_Parity_No; //无奇偶校验
		USART2_InitStruct.USART_Mode = USART_Mode_Tx|USART_Mode_Rx;
		USART2_InitStruct.USART_HardwareFlowControl = USART_HardwareFlowControl_None;
		USART_Init(USART2,&USART2_InitStruct);
		
		NVIC_InitStructure.NVIC_IRQChannel						=	USART2_IRQn;		//DMA1_Stream1_IRQn;
		NVIC_InitStructure.NVIC_IRQChannelCmd					=	ENABLE;
		NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority	=	1;
		NVIC_InitStructure.NVIC_IRQChannelSubPriority			=	1;
		NVIC_Init(&NVIC_InitStructure);
		USART_ITConfig(USART2, USART_IT_IDLE, ENABLE); 
		USART_Cmd(USART2,ENABLE);
}
	/* -------------- Configure DMA -----------------------------------------*/
	{
		// 接收数据
		DMA_InitTypeDef DMA_InitStruct;
		DMA_DeInit(DMA1_Stream5);					//重置为缺省值
		DMA_InitStruct.DMA_Channel = DMA_Channel_4;
		DMA_InitStruct.DMA_PeripheralBaseAddr = (uint32_t)&(USART2->DR);			//源地址
		DMA_InitStruct.DMA_Memory0BaseAddr = (uint32_t)(Usart2_Rx);			//目的地址
		DMA_InitStruct.DMA_DIR = DMA_DIR_PeripheralToMemory;				//数据传输方向为外设到内存
		DMA_InitStruct.DMA_BufferSize = USART2_RX_LEN;							//设置数据的缓冲大小
		DMA_InitStruct.DMA_PeripheralInc = DMA_PeripheralInc_Disable;				//外设地址不变
		DMA_InitStruct.DMA_MemoryInc = DMA_MemoryInc_Enable;								//内存缓冲区地址自加
		DMA_InitStruct.DMA_PeripheralDataSize = DMA_PeripheralDataSize_Byte;//8位字节传输
		DMA_InitStruct.DMA_MemoryDataSize = DMA_MemoryDataSize_Byte;				//数据宽度为8位
		DMA_InitStruct.DMA_Mode = DMA_Mode_Circular;												//工作在循环缓存模式
		DMA_InitStruct.DMA_Priority = DMA_Priority_VeryHigh;								//最高优先级
		DMA_InitStruct.DMA_FIFOMode = DMA_FIFOMode_Disable;
		DMA_InitStruct.DMA_FIFOThreshold = DMA_FIFOThreshold_1QuarterFull;
		DMA_InitStruct.DMA_MemoryBurst = DMA_Mode_Normal;//DMA_MemoryBurst_Single;//
		DMA_InitStruct.DMA_PeripheralBurst = DMA_PeripheralBurst_Single;
		DMA_Init(DMA1_Stream5,&DMA_InitStruct);
		DMA_Cmd(DMA1_Stream5,ENABLE);
		
		USART_DMACmd(USART2,USART_DMAReq_Rx,ENABLE);	
	}
}

///*
//*名称：串口二外接陀螺仪接收中断
//*功能：陀螺仪数据接收并保存
//*输入：无
//*输出：无
//*/
int16_t USART2_Receive_Flag=0;
u16 usart2_dataLen=0;
void USART2_IRQHandler(void)			// 接收数据中断
{
	u16 i;
	u8 num=0;
	if(USART_GetITStatus(USART2, USART_IT_IDLE) != RESET)//触发中断标志位
	{
		DMA_Cmd(DMA1_Stream5, DISABLE);//关闭DMA,防止处理期间有数据
		while(DMA_GetCmdStatus(DMA1_Stream5) != DISABLE);
		num=USART2->SR;
		num=USART2->DR;
		num=USART2_RX_LEN-DMA_GetCurrDataCounter(DMA1_Stream5);
		usart2_dataLen=num;
		for(i=0;i<num;i++)
			MSDataBuffer_2[i]=Usart2_Rx[i];
		DMA_SetCurrDataCounter(DMA1_Stream5,USART2_RX_LEN);
		DMA_Cmd(DMA1_Stream5, ENABLE);//开启DMA
		
		BMI_Data_Deal(); //BMI外接陀螺仪串口返回数据处理
		//USART2_Receive_Flag=1;
	}
}


/* 
*功能：高低八位数据整合
*/
float hex2Float(uint8_t HighByte, uint8_t LowByte)
{
  float high = (float) (HighByte & 0x7f);
  float low  = (float) LowByte;
  if (HighByte & 0x80)//MSB is 1 means a negative number
  {
    return (high*256.0f + low) - 32768;
  }
  else
  {
    return (high*256.0f + low);
  }
}


/*
*BMI160数据存进结构体
*/
BMI160_Data_Typedef BMI160_Data;
int16_t usart2_receive_count=0;

void BMI_Data_Deal()
{
//	u16 i;

//	if(USART2_Receive_Flag)
//	{
//		for(i=0;i<usart2_dataLen;i++)
//		{
			if(MSDataBuffer_2[0]==0xfe && MSDataBuffer_2[13]==0xee)
			{
//				BMI160_Data.Gyro_X = ((MSDataBuffer_2[i+1]<<8) | MSDataBuffer_2[i+2])/100.0f;
//				BMI160_Data.Gyro_Y = ((MSDataBuffer_2[i+3]<<8) | MSDataBuffer_2[i+4])/100.0f;
//				BMI160_Data.Gyro_Z = ((MSDataBuffer_2[i+5]<<8) | MSDataBuffer_2[i+6])/100.0f;
//				BMI160_Data.roll_angle = ((MSDataBuffer_2[i+7]<<8) | MSDataBuffer_2[i+8])/100.0f;
//				BMI160_Data.pitch_angle = ((MSDataBuffer_2[i+9]<<8) | MSDataBuffer_2[i+10])/100.0f;
				BMI160_Data.yaw_angle = (hex2Float(MSDataBuffer_2[11],MSDataBuffer_2[12])/10);//((MSDataBuffer_2[i+11]<<8) | MSDataBuffer_2[i+12])/100.0f;
				
				//i=i+13;
			}
//		}
//		USART2_Receive_Flag=0;
//	}
}




